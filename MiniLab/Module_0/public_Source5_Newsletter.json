{
  "designation": "SDE",
  "lab": "Career Readiness & Personal Strategy",
  "module_id": "designation-deep-dive",
  "module_title": "Module 0: Designation Deep Dive (SDE Overview)",
  "difficulty": "Beginner to Expert",
  "last_updated": "2025-06-28",
  "tags": [
    "sde",
    "career",
    "roadmap",
    "growth",
    "newsletter"
  ],
  "review_status": "draft",
  "source": "public-newsletter",
  "segments": {
    "introduction": {
      "level_1": "An SDE (Software Development Engineer) is someone who writes code to build apps, websites, and systems. It starts with learning basics and grows into solving bigger challenges.",
      "level_2": "A clear roadmap helps you understand roles like SDE I, SDE II, and Senior SDE. Each level needs technical and soft skills to move ahead.",
      "level_3": "Mid-level engineers handle feature ownership, reviews, and mentor juniors. Growth needs planning and feedback.",
      "level_4": "Senior engineers align code with business goals, handle architecture, and drive the team’s success."
    },
    "realWorldUseCases": [
      {
        "title": "Bug Fixing",
        "description": "Interns and juniors fix small bugs to learn the system.",
        "level": 1
      },
      {
        "title": "Feature Development",
        "description": "Juniors build small modules or add new features.",
        "level": 2
      },
      {
        "title": "Leading Code Reviews",
        "description": "Mid-level devs guide peers, review PRs, and ensure clean merges.",
        "level": 3
      },
      {
        "title": "System Architecture",
        "description": "Seniors design scalable systems and balance performance vs cost.",
        "level": 4
      }
    ],
    "industryApplications": [
      {
        "domain": "Product Teams",
        "description": "SDEs write production-ready code for apps and services.",
        "level": 2
      },
      {
        "domain": "Tech Leadership",
        "description": "Senior SDEs help plan releases, manage risks, and coach new hires.",
        "level": 4
      }
    ],
    "thinkingPattern": {
      "level_1": "Start by understanding basics: languages, logic, debugging simple code.",
      "level_2": "Think in modules — break big problems into smaller chunks.",
      "level_3": "Focus on scalable code, tests, and collaboration.",
      "level_4": "Combine tech thinking with business impact and team growth."
    },
    "problemTypes": {
      "level_1": [
        "Debug a small syntax error",
        "Understand basic input-output",
        "Write a simple function"
      ],
      "level_2": [
        "Build a CRUD module",
        "Fix a feature bug",
        "Add a unit test"
      ],
      "level_3": [
        "Refactor legacy code",
        "Write integration tests",
        "Handle code reviews"
      ],
      "level_4": [
        "Design microservices",
        "Plan system migrations",
        "Guide junior team members"
      ]
    },
    "assessmentsAndQuizzes": [
      {
        "question": "What is an SDE responsible for?",
        "type": "MCQ",
        "level": 1
      },
      {
        "question": "What’s the difference between SDE I and SDE II?",
        "type": "Short Answer",
        "level": 2
      },
      {
        "question": "How do code reviews help a team?",
        "type": "True/False",
        "level": 3
      },
      {
        "question": "Explain how senior SDEs align code with business goals.",
        "type": "Short Essay",
        "level": 4
      }
    ],
    "miniProjects": [
      {
        "title": "Portfolio Bug Fix",
        "description": "Fix a small bug in a personal or public repo.",
        "difficulty": "Easy",
        "goal_fit": [
          "Beginner"
        ],
        "tags": [
          "bug",
          "beginner",
          "fix"
        ],
        "level": 1
      },
      {
        "title": "Feature Add",
        "description": "Add a new feature to a sample app and test it.",
        "difficulty": "Intermediate",
        "goal_fit": [
          "Junior Dev"
        ],
        "tags": [
          "feature",
          "add",
          "test"
        ],
        "level": 2
      },
      {
        "title": "Refactor & Review",
        "description": "Refactor old code and set up a PR for team review.",
        "difficulty": "Advanced",
        "goal_fit": [
          "Mid-level"
        ],
        "tags": [
          "refactor",
          "review",
          "code"
        ],
        "level": 3
      },
      {
        "title": "System Design Draft",
        "description": "Draft a high-level design for a simple scalable system.",
        "difficulty": "Expert",
        "goal_fit": [
          "Senior Dev"
        ],
        "tags": [
          "design",
          "architecture"
        ],
        "level": 4
      }
    ],
    "suggestionsAndMistakes": {
      "level_1": [
        "Don’t ignore syntax basics — keep practicing daily.",
        "Always run and test your code step-by-step."
      ],
      "level_2": [
        "Break big tasks into modules.",
        "Don’t skip documentation for your feature."
      ],
      "level_3": [
        "Refactor often, not just when told.",
        "Ask for peer review — don’t merge blindly."
      ],
      "level_4": [
        "Plan architecture with scalability in mind.",
        "Keep mentoring juniors — knowledge sharing matters."
      ]
    }
  }
}
