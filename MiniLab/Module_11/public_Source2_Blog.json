{
  "source": "Public blog-style content inspired by team collaboration and dev communication blogs",
  "module": "Module 11: Communication in Tech Teams",
  "file_type": "public_Source2_Blog",
  "segments": {
    "introduction": {
      "level_1": [
        "When I joined my first dev team, I didn’t know when or how to speak. I stayed quiet — and it cost me.",
        "A mentor told me: 'Your code should be clean. But your words should be clearer.'",
        "In our project group, we had more issues due to confusion than actual bugs.",
        "I learned that saying 'I’m stuck' early is better than staying silent and delaying work.",
        "Good communication saved us time — and bad communication wasted it."
      ],
      "level_2": [
        "After a failed sprint, we realized: our problem wasn’t code, it was unclear updates.",
        "I once gave code feedback with a harsh tone — the dev got upset. I now add context and kindness.",
        "Slack threads became our best tool for async updates — now we never miss decisions.",
        "I created a 'last 24 hrs, next 24 hrs, blockers' format for team updates. Simple but effective.",
        "I started re-reading my messages before sending. Tone matters more than we think."
      ],
      "level_3": [
        "We once had a misunderstanding in PR reviews. A 5-min call cleared what 3 days of text couldn’t.",
        "Meetings without agendas feel like chaos. We now always list topics before calls.",
        "As a team lead, I’ve learned to listen more. Most conflicts come from assumptions, not intentions.",
        "We added a 'clarity over cleverness' rule to our documentation culture.",
        "I now log decisions in Notion and tag the team — helps align faster."
      ],
      "level_4": [
        "I realized communication isn’t just for status — it builds trust, morale, and focus.",
        "I run 1:1s every week just to align on emotions and workload — it helps prevent burnout.",
        "We replaced long daily standups with a shared async doc — now people feel heard without pressure.",
        "The best feedback I got: 'You help people feel safe to speak up.' That’s the real value.",
        "Communication isn’t just about what you say. It’s what others feel after you’ve said it."
      ]
    },
    "realWorldUseCases": {
      "level_1": [
        "Asking for help with proper context on chat.",
        "Explaining your bug to a teammate without blaming anyone.",
        "Summarizing what you did today to your team."
      ],
      "level_2": [
        "Using emojis or reactions to acknowledge team messages.",
        "Writing daily updates in a shared document.",
        "Commenting on GitHub PRs with reasons, not just opinions."
      ],
      "level_3": [
        "Running a retrospective to reflect on what could be communicated better.",
        "Organizing peer standups where everyone shares blockers safely.",
        "Creating a doc that explains a setup for new devs clearly."
      ],
      "level_4": [
        "Managing async collaboration across time zones with clarity and empathy.",
        "Handling feedback discussions with calm and openness.",
        "Facilitating project kickoffs with cross-functional teams."
      ]
    },
    "industryApplications": {
      "level_1": [
        "Interns check in daily and raise flags early.",
        "Juniors ask doubts without fear in mentoring spaces."
      ],
      "level_2": [
        "Remote teams rely on async tools like Slack, Notion, Loom.",
        "Dev teams use GitHub discussions and PR templates."
      ],
      "level_3": [
        "Sprint retros, standups, and pair programming all rely on strong communication.",
        "Tech blogs, changelogs, and design docs share dev thinking."
      ],
      "level_4": [
        "Leads use storytelling to align teams around vision.",
        "Senior engineers influence team culture through language and feedback."
      ]
    },
    "thinkingPattern": {
      "level_1": [
        "What do I want the other person to understand?",
        "Is my message clear and short?"
      ],
      "level_2": [
        "Did I explain my intention or just my task?",
        "Is my message helpful or just demanding?"
      ],
      "level_3": [
        "Did I ask before assuming?",
        "Is my communication building safety and trust?"
      ],
      "level_4": [
        "Am I using communication to align, not just inform?",
        "Can I turn conflicts into collaboration using better conversation?"
      ]
    },
    "problemTypes": {
      "level_1": [
        "Not speaking up when blocked.",
        "Being rude or short without realizing it."
      ],
      "level_2": [
        "Using vague language in updates.",
        "Reacting emotionally in public channels."
      ],
      "level_3": [
        "Not writing down decisions — relying on memory.",
        "Avoiding necessary feedback conversations."
      ],
      "level_4": [
        "Assuming people understand your tone or priorities.",
        "Over-talking in meetings, leaving no room for others."
      ]
    },
    "assessmentsAndQuizzes": {
      "level_1": [
        "Why is it important to ask for help clearly?",
        "What should a good daily update include?"
      ],
      "level_2": [
        "Name two tools used for async communication.",
        "How can you make your messages more respectful?"
      ],
      "level_3": [
        "What is the role of documentation in team communication?",
        "Why are retros important for team collaboration?"
      ],
      "level_4": [
        "What’s the impact of psychological safety in tech teams?",
        "How can communication influence team productivity?"
      ]
    },
    "miniProjects": {
      "level_1": [
        "Write a sample update message with yesterday’s task and today’s plan."
      ],
      "level_2": [
        "Draft a code review comment with positive and helpful tone.",
        "Write a small guide for new teammates on how your team communicates."
      ],
      "level_3": [
        "Run a mock standup with your group and note improvements.",
        "Write a changelog or feature update note for a project."
      ],
      "level_4": [
        "Create a communication SOP (Standard Operating Procedure) for your project.",
        "Host a feedback circle and document key takeaways."
      ]
    },
    "suggestionsAndMistakes": {
      "level_1": [
        "Don’t ghost — reply even if you’re late.",
        "Be polite even in short messages."
      ],
      "level_2": [
        "Avoid dumping info — give context.",
        "Don’t react when angry — pause and rethink."
      ],
      "level_3": [
        "Don’t assume people know what you mean — clarify.",
        "Avoid making team discussions personal."
      ],
      "level_4": [
        "Don’t silence opposing views — invite them with respect.",
        "Avoid hiding behind silence — speak up when needed."
      ]
    }
  }
}
